server {
    listen 80;
    listen [::]:80; # Listen on IPv6 as well

    server_name odi.aaronbuckland.com;

    # Path to your frontend's build output
    # Assumes your project is in /opt/odi-aaron, so frontend is in /opt/odi-aaron/dist
    root /opt/odi-aaron/dist;
    index index.html index.htm;

    # Serve static files directly and handle SPA routing
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Reverse proxy API requests to your backend server
    # Assumes your Node.js backend (run by PM2) is listening on port 3956
    location /api {
        proxy_pass http://localhost:3956;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Access and error logs (adjust paths as needed)
    access_log /var/log/nginx/odi.aaronbuckland.com.access.log;
    error_log /var/log/nginx/odi.aaronbuckland.com.error.log;

    # Optional: Security headers (add more as needed)
    # add_header X-Content-Type-Options "nosniff" always;
    # add_header X-Frame-Options "SAMEORIGIN" always;
    # add_header X-XSS-Protection "1; mode=block" always;

    # Optional: Gzip compression for static assets
    # gzip on;
    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;
}
